@using Microsoft.AspNetCore.Identity
@using Resort.Domain.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
<ul class="navbar-nav  d-none d-md-flex nav-login">
	<li class="nav-item dropdown">
		<a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button"
		   data-bs-toggle="dropdown" aria-expanded="false">
			hey, @UserManager.GetUserName(User)
		</a>
		<ul class="dropdown-menu" aria-labelledby="navbarDropdown">
			<a class="nav-link text-center" asp-controller="Account" asp-action="LogOut">Logout</a>           
            <a class="nav-link text-center" asp-controller="Account" asp-action="ChangePassword">Change Password</a>            
		</ul>

	</li>
</ul>

@* <ul class="navbar-nav">

     @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link" href="#">Hello @UserManager.GetUserName(User)</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-controller="Account" asp-action="Logout">Logout</a>
        </li>
    }  

     the simplest way without using  SignInManager && UserManager *@
@*  @if (User.Identity.IsAuthenticated) {
        <li class="nav-item">
            <a class="nav-link" >Hey, @User.Identity.Name </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-controller="Account" asp-action="LogOut">LogOut</a>
        </li>
    }
    else {
        <li class="nav-item">
            <a class="nav-link" asp-controller="Account" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-controller="Account" asp-action="Login">Login</a>
        </li>
    }
</ul> *@
 


